#!/usr/bin/python3
#mv /home/sbrandt/backup.txt /home/sbrandt/backup.rsync.txt
#rsync /home/sbrandt/ vault:backup/ --update --files-from=/home/sbrandt/backup.rsync.txt
from time import sleep
import subprocess
import sys
import os
import re
import threading

home = os.environ["HOME"]
os.chdir(home)
backup_host = "vault.cct"
backup_src = os.path.join(home, "backup.txt")
backup_dst = os.path.join(home, "backup.rsync.txt")

homedirs = { home }

def is_in_home(p):
    p0 = p
    for h in homedirs:
        if p.startswith(h):
            return p[len(h)+1:]
    s1 = os.stat(p)
    if len(p) > 0 and p[0] == '/':
        p = p[1:]
    while True:
        test_p = os.path.join(home, p)
        if os.path.exists(test_p):
            s2 = os.stat(test_p)
            if s1.st_ino == s2.st_ino:
                h = p0[0:len(p0)-len(p)-1]
                homedirs.add(h)
                return p
        new_p = re.sub(r'^[^/]*/','',p)
        if new_p == p:
            return None
        p = new_p

try:
  fd = open(backup_src)
except:
  sys.exit(0)
fw = open(backup_dst,"w")
for line in fd.readlines():
  line = line.strip()
  line = is_in_home(line)
  if line is None:
    continue
  if os.path.isfile(line) or os.path.isdir(line):
    print(line)
    fw.write(line)
    fw.write('\n')
fw.close()

def rsync(fname):
    if re.match(r'.*/x(\.\w+|)$',fname):
        print("Skip:",fname)
        return
    dst = os.path.join("backup", os.path.dirname(fname))
    cmd =['/usr/bin/rsync','-a','-z',fname,backup_host+':'+dst]
    p = subprocess.Popen(cmd)
    p.communicate()
    r = p.returncode
    if r != 0:
        raise Exception("cmd=%s, r=%s" % (str(cmd),str(r)))

with open(backup_dst, "r") as fd:
    for line in fd.readlines():
        fname = line.strip()
        rsync(fname)
os.remove(backup_src)
